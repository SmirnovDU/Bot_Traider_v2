#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ —á–µ—Ä–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–∏
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.append(os.path.join(os.path.dirname(__file__)))

def test_new_migration():
    """–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞"""
    print("üß™ –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞")
    
    try:
        from bot.config import USE_MYSQL, DB_PATH
        
        if USE_MYSQL:
            print("   ‚ùå MySQL —Ç–µ—Å—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ")
            return False
            
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SQLite
        import sqlite3
        conn = sqlite3.connect(DB_PATH)
        cur = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cur.execute("PRAGMA table_info(trades)")
        columns_before = [row[1] for row in cur.fetchall()]
        print(f"   –°—Ç–æ–ª–±—Ü—ã –î–û: {columns_before}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü
        from bot.migrations import add_column_if_not_exists
        
        added = add_column_if_not_exists(cur, "trades", "test_column", "TEXT DEFAULT 'test'")
        
        if added:
            print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –¥–æ–±–∞–≤–ª–µ–Ω")
            conn.commit()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç–æ–ª–±–µ—Ü –ø–æ—è–≤–∏–ª—Å—è
            cur.execute("PRAGMA table_info(trades)")
            columns_after = [row[1] for row in cur.fetchall()]
            print(f"   –°—Ç–æ–ª–±—Ü—ã –ü–û–°–õ–ï: {columns_after}")
            
            if "test_column" in columns_after:
                print("   ‚úÖ –°—Ç–æ–ª–±–µ—Ü —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
                
                # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü (SQLite –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç DROP COLUMN –≤ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö)
                print("   ‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ –ë–î (SQLite –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ)")
            else:
                print("   ‚ùå –°—Ç–æ–ª–±–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è")
                
        else:
            print("   ‚úÖ –°—Ç–æ–ª–±–µ—Ü —É–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_new_migration()
