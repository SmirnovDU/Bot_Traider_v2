#!/usr/bin/env python3

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TEST_MODE'] = 'True'
os.environ['WEBHOOK_SECRET'] = 'test_secret'
os.environ['DEFAULT_EXCHANGE'] = 'bybit'
os.environ['TEST_BALANCE_USDT'] = '100'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')


def test_balance_source():
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –±–∞–ª–∞–Ω—Å–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–∞—Ö...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
    from exchange_selector import ExchangeSelector
    from bot.db import init_db, init_test_balances, update_balance
    from bot.config import TEST_MODE
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    init_test_balances()
    
    # –°–æ–∑–¥–∞—ë–º —Å–µ–ª–µ–∫—Ç–æ—Ä
    selector = ExchangeSelector()
    
    print(f"\nüìã –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {'–¢–ï–°–¢–û–í–´–ô' if TEST_MODE else '–ë–û–ï–í–û–ô'}")
    
    print("\n1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –±–∞–ª–∞–Ω—Å–æ–≤ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...")
    print("   –û–∂–∏–¥–∞–µ–º: –±–∞–ª–∞–Ω—Å—ã –∏–∑ –ë–î")
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å—ã —á–µ—Ä–µ–∑ —Å–µ–ª–µ–∫—Ç–æ—Ä
    exchange, price = selector.get_best_price_exchange("BTCUSDT", 50)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: –≤—ã–±—Ä–∞–Ω–∞ –±–∏—Ä–∂–∞ {exchange.name}")
    
    print("\n2. –ò–∑–º–µ–Ω—è–µ–º –±–∞–ª–∞–Ω—Å –≤ –ë–î...")
    update_balance("Bybit", "USDT", 25)
    print("   Bybit –±–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω—ë–Ω –≤ –ë–î: 100 ‚Üí 25 USDT")
    
    print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ–ª–µ–∫—Ç–æ—Ä –≤–∏–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î...")
    try:
        exchange, price = selector.get_best_price_exchange("BTCUSDT", 30)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: –≤—ã–±—Ä–∞–Ω–∞ –±–∏—Ä–∂–∞ {exchange.name}")
        if exchange.name == "Binance":
            print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: Binance –≤—ã–±—Ä–∞–Ω–∞ (Bybit –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤)")
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞: –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–∞ Binance")
    except ValueError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã –Ω–∞–ø—Ä—è–º—É—é...")
    bybit_balance = selector.bybit.get_balance("USDT")
    binance_balance = selector.binance.get_balance("USDT")
    print(f"   Bybit.get_balance(): {bybit_balance} USDT")
    print(f"   Binance.get_balance(): {binance_balance} USDT")
    
    print("\n5. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å—ã...")
    init_test_balances()
    print("   –ë–∞–ª–∞–Ω—Å—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    print("\n6. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –≤—ã–±–æ—Ä–∞ –±–∏—Ä–∂–∏...")
    print("   –°—Ü–µ–Ω–∞—Ä–∏–π: Bybit=100 USDT, Binance=100 USDT, –ø–æ–∫—É–ø–∫–∞ –Ω–∞ 80 USDT")
    
    # Bybit –∏–º–µ–µ—Ç –ª—É—á—à—É—é —Ü–µ–Ω—É (100 vs 25000)
    exchange, price = selector.get_best_price_exchange("BTCUSDT", 80)
    print(f"   –í—ã–±—Ä–∞–Ω–∞ –±–∏—Ä–∂–∞: {exchange.name}")
    print(f"   –ü—Ä–∏—á–∏–Ω–∞: –ª—É—á—à–∞—è —Ü–µ–Ω–∞ + –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
    
    print("\n7. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º fallback –ª–æ–≥–∏–∫—É...")
    print("   –°—Ü–µ–Ω–∞—Ä–∏–π: Bybit=50 USDT, Binance=100 USDT, –ø–æ–∫—É–ø–∫–∞ –Ω–∞ 80 USDT")
    
    # –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å Bybit
    update_balance("Bybit", "USDT", 50)
    
    exchange, price = selector.get_best_price_exchange("BTCUSDT", 80)
    print(f"   –í—ã–±—Ä–∞–Ω–∞ –±–∏—Ä–∂–∞: {exchange.name}")
    if exchange.name == "Binance":
        print("   –ü—Ä–∏—á–∏–Ω–∞: Bybit –∏–º–µ–µ—Ç –ª—É—á—à—É—é —Ü–µ–Ω—É, –Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚Üí fallback –Ω–∞ Binance")
    else:
        print("   ‚ùå –û—à–∏–±–∫–∞: –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–∞ Binance")
    
    print("\n8. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏...")
    print("   –°—Ü–µ–Ω–∞—Ä–∏–π: Bybit=50 USDT, Binance=100 USDT, –ø–æ–∫—É–ø–∫–∞ –Ω–∞ 120 USDT")
    
    try:
        exchange, price = selector.get_best_price_exchange("BTCUSDT", 120)
        print(f"   ‚ùå –û—à–∏–±–∫–∞: —Å–¥–µ–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
    except ValueError as e:
        print(f"   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ: {e}")
    
    print("\nüìä –ò—Ç–æ–≥–æ–≤–∞—è –ª–æ–≥–∏–∫–∞:")
    print("   ‚úÖ –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –±–∞–ª–∞–Ω—Å—ã –±–µ—Ä—É—Ç—Å—è –∏–∑ –ë–î")
    print("   ‚úÖ –í –±–æ–µ–≤–æ–º —Ä–µ–∂–∏–º–µ –±–∞–ª–∞–Ω—Å—ã –±—É–¥—É—Ç –±—Ä–∞—Ç—å—Å—è –∏–∑ API")
    print("   ‚úÖ –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –±–∏—Ä–∂–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("   ‚úÖ Fallback –º–µ—Ö–∞–Ω–∏–∑–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –±–∞–ª–∞–Ω—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    test_balance_source()
