#!/usr/bin/env python3

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TEST_MODE'] = 'True'
os.environ['WEBHOOK_SECRET'] = 'test_secret'
os.environ['DEFAULT_EXCHANGE'] = 'bybit'
os.environ['TEST_BALANCE_USDT'] = '100'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')


def test_webhook_fix():
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ webhook...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
    from bot.main import app
    from bot.db import init_db, init_test_balances
    from fastapi.testclient import TestClient
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    init_test_balances()
    
    # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç
    client = TestClient(app)
    
    print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
    print("\nüí∞ –ù–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã:")
    response = client.get("/balances")
    balances = response.json()["balances"]
    for balance in balances:
        print(f"  {balance[0]}: {balance[2]} {balance[1]}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É —Å –Ω–µ–±–æ–ª—å—à–æ–π —Å—É–º–º–æ–π (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞)
    print("\nüü¢ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É BTC –Ω–∞ 5 USDT (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞ 10%)...")
    
    buy_data = {
        "secret": "test_secret",
        "action": "buy",
        "symbol": "BTCUSDT",
        "usdt_amount": 5  # 5% –æ—Ç –±–∞–ª–∞–Ω—Å–∞ 100 USDT
    }
    
    response = client.post("/webhook", json=buy_data)
    
    if response.status_code == 200:
        result = response.json()
        if result.get('status') == 'ok':
            print(f"‚úÖ –ü–æ–∫—É–ø–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
            print(f"  –í—ã–±—Ä–∞–Ω–Ω–∞—è –±–∏—Ä–∂–∞: {result['exchange']}")
            print(f"  Request ID: {result['request_id']}")
            print(f"  –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ: {result['balance_after']} USDT")
            print(f"  –ö–æ–º–∏—Å—Å–∏—è: {result['order']['fee']} USDT")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º timestamp
            print(f"  Timestamp: {result.get('timestamp', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result}")
    else:
        print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
    print("\nüí∞ –ë–∞–ª–∞–Ω—Å—ã –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏:")
    response = client.get("/balances")
    balances = response.json()["balances"]
    for balance in balances:
        print(f"  {balance[0]}: {balance[2]} {balance[1]}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂—É
    print("\nüî¥ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂—É BTC...")
    
    sell_data = {
        "secret": "test_secret",
        "action": "sell",
        "symbol": "BTCUSDT"
    }
    
    response = client.post("/webhook", json=sell_data)
    
    if response.status_code == 200:
        result = response.json()
        if result.get('status') == 'ok':
            print(f"‚úÖ –ü—Ä–æ–¥–∞–∂–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
            print(f"  Request ID: {result['request_id']}")
            print(f"  –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ: {result['balance_after']} USDT")
            if result.get('profit') is not None:
                print(f"  –ü—Ä–∏–±—ã–ª—å: {result['profit']} USDT")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result}")
    else:
        print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
    print("\nüí∞ –§–∏–Ω–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã:")
    response = client.get("/balances")
    balances = response.json()["balances"]
    for balance in balances:
        print(f"  {balance[0]}: {balance[2]} {balance[1]}")
    
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:")
    print("  ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è balance_before")
    print("  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π datetime.utcnow()")
    print("  ‚úÖ –ö–æ–º–∏—Å—Å–∏—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ place_order")
    print("  ‚úÖ Timestamp –∏—Å–ø–æ–ª—å–∑—É–µ—Ç timezone-aware datetime")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    test_webhook_fix()
