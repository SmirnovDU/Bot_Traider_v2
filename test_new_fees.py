#!/usr/bin/env python3

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TEST_MODE'] = 'True'
os.environ['WEBHOOK_SECRET'] = 'test_secret'
os.environ['DEFAULT_EXCHANGE'] = 'bybit'
os.environ['TEST_BALANCE_USDT'] = '1000'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')

def test_new_fees():
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞ –∫–æ–º–∏—Å—Å–∏–π...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
    from bot.db import init_db, init_test_balances, get_balance, update_balance
    from bot.exchanges.bybit import BybitExchange
    from bot.utils import calculate_fee_for_buy, calculate_fee_for_sell
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    init_test_balances()
    
    # –°–æ–∑–¥–∞—ë–º –±–∏—Ä–∂—É
    bybit = BybitExchange()
    
    print(f"–ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å USDT: {bybit.get_balance('USDT')}")
    
    # –¢–µ—Å—Ç 1: –ü–æ–∫—É–ø–∫–∞
    print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É BTC...")
    symbol = "BTCUSDT"
    usdt_amount = 100
    price = bybit.get_last_price(symbol)
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ —Å–¥–µ–ª–∫–æ–π
    usdt_before = bybit.get_balance("USDT")
    coin_before = bybit.get_balance(symbol.replace("USDT", ""))
    
    print(f"–ë–∞–ª–∞–Ω—Å USDT –¥–æ: {usdt_before}")
    print(f"–ë–∞–ª–∞–Ω—Å BTC –¥–æ: {coin_before}")
    print(f"–ü–æ–∫—É–ø–∞–µ–º –Ω–∞ {usdt_amount} USDT –ø–æ —Ü–µ–Ω–µ {price}")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∫—É–ø–∫—É
    qty = usdt_amount / price
    result = bybit.place_order("buy", symbol, qty, "quoteCoin")
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–¥–µ–ª–∫–∏
    usdt_after = bybit.get_balance("USDT")
    coin_after = bybit.get_balance(symbol.replace("USDT", ""))
    
    print(f"–ë–∞–ª–∞–Ω—Å USDT –ø–æ—Å–ª–µ: {usdt_after}")
    print(f"–ë–∞–ª–∞–Ω—Å BTC –ø–æ—Å–ª–µ: {coin_after}")
    print(f"–ö–æ–º–∏—Å—Å–∏—è –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {result['fee']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—á—ë—Ç –∫–æ–º–∏—Å—Å–∏–∏
    expected_fee = calculate_fee_for_buy(usdt_before, usdt_after, usdt_amount, price)
    print(f"–û–∂–∏–¥–∞–µ–º–∞—è –∫–æ–º–∏—Å—Å–∏—è: {expected_fee}")
    
    if abs(result['fee'] - expected_fee) < 0.01:
        print("‚úÖ –ö–æ–º–∏—Å—Å–∏—è —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á—ë—Ç–µ –∫–æ–º–∏—Å—Å–∏–∏")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–¥–∞–∂–∞
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂—É BTC...")
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–∞–∂–µ–π
    usdt_before_sell = bybit.get_balance("USDT")
    coin_before_sell = bybit.get_balance(symbol.replace("USDT", ""))
    
    print(f"–ë–∞–ª–∞–Ω—Å USDT –¥–æ –ø—Ä–æ–¥–∞–∂–∏: {usdt_before_sell}")
    print(f"–ë–∞–ª–∞–Ω—Å BTC –¥–æ –ø—Ä–æ–¥–∞–∂–∏: {coin_before_sell}")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–¥–∞–∂—É
    result_sell = bybit.place_order("sell", symbol, coin_before_sell, "baseCoin")
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏
    usdt_after_sell = bybit.get_balance("USDT")
    coin_after_sell = bybit.get_balance(symbol.replace("USDT", ""))
    
    print(f"–ë–∞–ª–∞–Ω—Å USDT –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏: {usdt_after_sell}")
    print(f"–ë–∞–ª–∞–Ω—Å BTC –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏: {coin_after_sell}")
    print(f"–ö–æ–º–∏—Å—Å–∏—è –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {result_sell['fee']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—á—ë—Ç –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
    deal_value = coin_before_sell * price
    expected_fee_sell = calculate_fee_for_sell(usdt_before_sell, usdt_after_sell, deal_value)
    print(f"–û–∂–∏–¥–∞–µ–º–∞—è –∫–æ–º–∏—Å—Å–∏—è: {expected_fee_sell}")
    
    if abs(result_sell['fee'] - expected_fee_sell) < 0.01:
        print("‚úÖ –ö–æ–º–∏—Å—Å–∏—è –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á—ë—Ç–µ –∫–æ–º–∏—Å—Å–∏–∏ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    test_new_fees()
