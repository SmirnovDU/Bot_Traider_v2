#!/usr/bin/env python3

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TEST_MODE'] = 'True'
os.environ['WEBHOOK_SECRET'] = 'test_secret'
os.environ['DEFAULT_EXCHANGE'] = 'bybit'
os.environ['TEST_BALANCE_USDT'] = '1000'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')

def test_real_prices():
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
    from bot.db import init_db, init_test_balances
    from bot.exchanges.bybit import BybitExchange
    from bot.exchanges.binance import BinanceExchange
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    init_test_balances()
    
    # –°–æ–∑–¥–∞—ë–º –±–∏—Ä–∂–∏
    bybit = BybitExchange()
    binance = BinanceExchange()
    
    print(f"–ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å USDT: {bybit.get_balance('USDT')}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
    symbols = ["DOTUSDT", "BTCUSDT", "ETHUSDT"]
    
    for symbol in symbols:
        print(f"\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º {symbol}:")
        
        bybit_price = bybit.get_last_price(symbol)
        binance_price = binance.get_last_price(symbol)
        
        print(f"  Bybit —Ü–µ–Ω–∞: ${bybit_price:.6f}")
        print(f"  Binance —Ü–µ–Ω–∞: ${binance_price:.6f}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ü–µ–Ω—ã —Ä–∞–∑—É–º–Ω—ã–µ
        if bybit_price > 0 and bybit_price != 100.0:
            print(f"  ‚úÖ Bybit: —Ä–µ–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–ª—É—á–µ–Ω–∞")
        else:
            print(f"  ‚ö†Ô∏è Bybit: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è —Ü–µ–Ω–∞")
            
        if binance_price > 0 and binance_price != 25000.0:
            print(f"  ‚úÖ Binance: —Ä–µ–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–ª—É—á–µ–Ω–∞")
        else:
            print(f"  ‚ö†Ô∏è Binance: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è —Ü–µ–Ω–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–µ–π
    print(f"\nüõí –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É DOTUSDT...")
    
    symbol = "DOTUSDT"
    usdt_amount = 10
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å—ã –î–û
    usdt_before = bybit.get_balance("USDT")
    dot_before = bybit.get_balance("DOT")
    
    print(f"  USDT –¥–æ –ø–æ–∫—É–ø–∫–∏: {usdt_before}")
    print(f"  DOT –¥–æ –ø–æ–∫—É–ø–∫–∏: {dot_before}")
    
    # –ü–æ–∫—É–ø–∞–µ–º
    price = bybit.get_last_price(symbol)
    qty = usdt_amount / price
    
    result = bybit.place_order("buy", symbol, qty, "quoteCoin")
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å—ã –ü–û–°–õ–ï
    usdt_after = bybit.get_balance("USDT")
    dot_after = bybit.get_balance("DOT")
    
    print(f"  USDT –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏: {usdt_after}")
    print(f"  DOT –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏: {dot_after}")
    print(f"  –¶–µ–Ω–∞: ${price:.6f}")
    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {qty:.6f}")
    print(f"  –ö–æ–º–∏—Å—Å–∏—è: ${result['fee']:.4f}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–º–∏—Å—Å–∏—è —Ä–∞–∑—É–º–Ω–∞—è (–Ω–µ -980!)
    if abs(result['fee']) < 1.0:  # –ö–æ–º–∏—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ $1
        print(f"  ‚úÖ –ö–æ–º–∏—Å—Å–∏—è —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print(f"  ‚ùå –ö–æ–º–∏—Å—Å–∏—è –≤—ã–≥–ª—è–¥–∏—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: ${result['fee']:.4f}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ü–µ–Ω–∞ –Ω–µ $100
    if price != 100.0:
        print(f"  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞")
    else:
        print(f"  ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è —Ü–µ–Ω–∞ $100")

if __name__ == "__main__":
    test_real_prices()
