#!/usr/bin/env python3

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TEST_MODE'] = 'True'
os.environ['WEBHOOK_SECRET'] = 'test_secret'
os.environ['DEFAULT_EXCHANGE'] = 'bybit'
os.environ['TEST_BALANCE_USDT'] = '1000'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')

def reset_database():
    """–ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–í–ù–ò–ú–ê–ù–ò–ï: —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!)"""
    print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î!")
    
    confirm = input("–í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
    if confirm != "YES":
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return
    
    from bot.config import DB_PATH
    import sqlite3
    
    try:
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ë–î
        if os.path.exists(DB_PATH):
            os.remove(DB_PATH)
            print(f"üóëÔ∏è –§–∞–π–ª –ë–î —É–¥–∞–ª–µ–Ω: {DB_PATH}")
        
        # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –ë–î
        from bot.db import init_db, init_test_balances
        init_db()
        init_test_balances()
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞ —Å –Ω—É–ª—è!")
        print("üìä –¢–µ—Å—Ç–æ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        from bot.db import get_all_balances, get_trades_summary
        balances = get_all_balances()
        trades = get_trades_summary()
        
        print(f"\nüìà –¢–µ–∫—É—â–∏–µ –±–∞–ª–∞–Ω—Å—ã:")
        for balance in balances:
            print(f"  {balance['exchange']} - {balance['coin']}: {balance['amount']}")
        
        print(f"üìú –°–¥–µ–ª–∫–∏: {trades['total_trades']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ë–î: {e}")

if __name__ == "__main__":
    reset_database()
