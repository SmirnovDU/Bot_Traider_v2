#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–¥–µ–ª–æ–∫ –≤ –ë–î
"""

import os
import sys
import time
from datetime import datetime, timezone

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.append(os.path.join(os.path.dirname(__file__)))

from bot.config import *
from bot.db import init_db, save_trade, get_trades_summary
from bot.utils import generate_request_id

def test_save_trade():
    """–¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏ –≤ –ë–î"""
    print("üß™ –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–¥–µ–ª–æ–∫ –≤ –ë–î")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    summary_before = get_trades_summary()
    trades_before = summary_before['total_trades']
    print(f"\n1. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫ –¥–æ —Ç–µ—Å—Ç–∞: {trades_before}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–¥–µ–ª–∫—É
    request_id = generate_request_id("TESTUSDT", "buy")
    trade_data = {
        "request_id": request_id,
        "timestamp": datetime.now(timezone.utc).isoformat(),
        "exchange": "Bybit",
        "side": "buy",
        "symbol": "TESTUSDT",
        "price": 1.0,
        "qty": 10.0,
        "amount_usdt": 10.0,
        "fee": 0.01,
        "profit": None,
        "profit_no_fees": None,
        "balance_after": 990.0,
        "note": "Test trade"
    }
    
    print(f"\n2. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–¥–µ–ª–∫—É: {request_id}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–¥–µ–ª–∫—É
    try:
        save_trade(trade_data)
        print("   ‚úÖ –°–¥–µ–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –±–µ–∑ –æ—à–∏–±–æ–∫")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–¥–µ–ª–∫–∞ –ø–æ—è–≤–∏–ª–∞—Å—å –≤ –ë–î
    summary_after = get_trades_summary()
    trades_after = summary_after['total_trades']
    print(f"\n3. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞: {trades_after}")
    
    if trades_after > trades_before:
        print("   ‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ë–î")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –Ω–∞—à–∞ —Å–¥–µ–ª–∫–∞
        recent_trades = summary_after['recent_trades']
        if recent_trades and recent_trades[0]['symbol'] == 'TESTUSDT':
            print("   ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å–¥–µ–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ")
            print(f"   –î–µ—Ç–∞–ª–∏: {recent_trades[0]}")
        else:
            print("   ‚ö†Ô∏è –°–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö")
    else:
        print("   ‚ùå –°–¥–µ–ª–∫–∞ –ù–ï —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å –≤ –ë–î")
        return False
    
    print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    test_save_trade()
