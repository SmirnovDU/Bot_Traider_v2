#!/usr/bin/env python3

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MySQL
os.environ['USE_MYSQL'] = 'True'
os.environ['TEST_MODE'] = 'True'
os.environ['TEST_BALANCE_USDT'] = '1000'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')

def test_mysql_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü"""
    print("üóÑÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –ë–î
        from bot.db import init_db, init_test_balances, get_all_balances, save_trade
        from datetime import datetime, timezone
        
        print("‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        init_db()
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã/–ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã
        print("üí∞ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤...")
        init_test_balances()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã
        balances = get_all_balances()
        print(f"üìä –¢–µ–∫—É—â–∏–µ –±–∞–ª–∞–Ω—Å—ã: {len(balances)}")
        for balance in balances:
            print(f"  {balance['exchange']} - {balance['coin']}: {balance['amount']}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–¥–µ–ª–∫—É
        print("üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Å–¥–µ–ª–∫–∞...")
        test_trade = {
            "request_id": f"test_{int(datetime.now().timestamp())}_TESTUSDT_BUY",
            "timestamp": datetime.now(timezone.utc).isoformat(),
            "exchange": "Bybit",
            "side": "buy",
            "symbol": "TESTUSDT",
            "price": 1.0,
            "qty": 10.0,
            "amount_usdt": 10.0,
            "fee": 0.01,
            "profit": None,
            "balance_after": 990.0,
            "note": "MySQL connection test"
        }
        
        save_trade(test_trade)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! MySQL —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("üöÄ –ì–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö.")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("1. MySQL —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω –≤ Railway")
        print("2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        print("3. –ù–µ—Ç mysql-connector-python –≤ requirements.txt")
        print("4. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é –¥–æ Railway")

if __name__ == "__main__":
    test_mysql_connection()
