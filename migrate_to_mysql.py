#!/usr/bin/env python3

import os
import sys
import sqlite3
import mysql.connector
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')

def migrate_sqlite_to_mysql():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ MySQL"""
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL (–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥ –≤–∞—à Railway MySQL)
    MYSQL_CONFIG = {
        'host': input("MySQL Host (Railway): "),
        'port': int(input("MySQL Port (–æ–±—ã—á–Ω–æ 3306): ") or "3306"),
        'user': input("MySQL User: "),
        'password': input("MySQL Password: "),
        'database': input("MySQL Database (trading_bot): ") or "trading_bot"
    }
    
    print("\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SQLite
        sqlite_path = "bot/trades.db"
        if not os.path.exists(sqlite_path):
            print(f"‚ùå SQLite –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {sqlite_path}")
            return
            
        sqlite_conn = sqlite3.connect(sqlite_path)
        sqlite_cur = sqlite_conn.cursor()
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MySQL
        mysql_conn = mysql.connector.connect(**MYSQL_CONFIG)
        mysql_cur = mysql_conn.cursor()
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã –≤ MySQL
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ MySQL...")
        
        mysql_cur.execute("""
        CREATE TABLE IF NOT EXISTS trades (
            id INT AUTO_INCREMENT PRIMARY KEY,
            request_id VARCHAR(255) UNIQUE NOT NULL,
            timestamp DATETIME NOT NULL,
            exchange VARCHAR(50),
            side VARCHAR(10),
            symbol VARCHAR(50),
            price DECIMAL(20,8),
            qty DECIMAL(20,8),
            amount_usdt DECIMAL(20,8),
            fee DECIMAL(20,8),
            profit DECIMAL(20,8),
            balance_after DECIMAL(20,8),
            note TEXT,
            INDEX idx_exchange_symbol (exchange, symbol),
            INDEX idx_side (side),
            INDEX idx_timestamp (timestamp)
        )
        """)
        
        mysql_cur.execute("""
        CREATE TABLE IF NOT EXISTS balances (
            exchange VARCHAR(50),
            coin VARCHAR(20),
            amount DECIMAL(20,8),
            PRIMARY KEY (exchange, coin)
        )
        """)
        
        # –ú–∏–≥—Ä–∞—Ü–∏—è —Å–¥–µ–ª–æ–∫
        print("üìä –ú–∏–≥—Ä–∞—Ü–∏—è —Å–¥–µ–ª–æ–∫...")
        sqlite_cur.execute("SELECT * FROM trades")
        trades = sqlite_cur.fetchall()
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
        sqlite_cur.execute("PRAGMA table_info(trades)")
        columns = [col[1] for col in sqlite_cur.fetchall()]
        print(f"–ö–æ–ª–æ–Ω–∫–∏ SQLite: {columns}")
        
        migrated_trades = 0
        for trade in trades:
            try:
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º timestamp –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                timestamp = trade[columns.index('timestamp')]
                if isinstance(timestamp, str):
                    # –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å ISO —Ñ–æ—Ä–º–∞—Ç
                    try:
                        timestamp = datetime.fromisoformat(timestamp.replace('Z', '+00:00'))
                    except:
                        timestamp = datetime.now()
                
                mysql_cur.execute("""
                INSERT IGNORE INTO trades 
                (request_id, timestamp, exchange, side, symbol, price, qty, 
                 amount_usdt, fee, profit, balance_after, note)
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
                """, (
                    trade[columns.index('request_id')],
                    timestamp,
                    trade[columns.index('exchange')],
                    trade[columns.index('side')],
                    trade[columns.index('symbol')],
                    trade[columns.index('price')],
                    trade[columns.index('qty')],
                    trade[columns.index('amount_usdt')],
                    trade[columns.index('fee')],
                    trade[columns.index('profit')],
                    trade[columns.index('balance_after')],
                    trade[columns.index('note')] if 'note' in columns else None
                ))
                migrated_trades += 1
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–¥–µ–ª–∫–∏: {e}")
        
        # –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–æ–≤
        print("üí∞ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–æ–≤...")
        sqlite_cur.execute("SELECT * FROM balances")
        balances = sqlite_cur.fetchall()
        
        migrated_balances = 0
        for balance in balances:
            try:
                mysql_cur.execute("""
                INSERT INTO balances (exchange, coin, amount) 
                VALUES (%s, %s, %s)
                ON DUPLICATE KEY UPDATE amount=%s
                """, (balance[0], balance[1], balance[2], balance[2]))
                migrated_balances += 1
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        mysql_conn.commit()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        mysql_cur.execute("SELECT COUNT(*) FROM trades")
        mysql_trades_count = mysql_cur.fetchone()[0]
        
        mysql_cur.execute("SELECT COUNT(*) FROM balances")
        mysql_balances_count = mysql_cur.fetchone()[0]
        
        print(f"\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìä –°–¥–µ–ª–∫–∏: {migrated_trades} –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ, {mysql_trades_count} –≤—Å–µ–≥–æ –≤ MySQL")
        print(f"üí∞ –ë–∞–ª–∞–Ω—Å—ã: {migrated_balances} –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ, {mysql_balances_count} –≤—Å–µ–≥–æ –≤ MySQL")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–¥–µ–ª–∫–∏
        mysql_cur.execute("""
        SELECT exchange, side, symbol, amount_usdt, timestamp 
        FROM trades ORDER BY timestamp DESC LIMIT 5
        """)
        recent_trades = mysql_cur.fetchall()
        
        print(f"\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–¥–µ–ª–æ–∫ –≤ MySQL:")
        for trade in recent_trades:
            print(f"  {trade[4]} - {trade[1].upper()} {trade[2]} –Ω–∞ {trade[0]} (${trade[3]})")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–ª–∞–Ω—Å—ã
        mysql_cur.execute("SELECT exchange, coin, amount FROM balances WHERE amount > 0")
        active_balances = mysql_cur.fetchall()
        
        print(f"\nüí∞ –ê–∫—Ç–∏–≤–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã –≤ MySQL:")
        for balance in active_balances:
            print(f"  {balance[0]} - {balance[1]}: {balance[2]}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        sqlite_conn.close()
        mysql_conn.close()
        
        print(f"\nüéØ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print(f"MYSQL_HOST={MYSQL_CONFIG['host']}")
        print(f"MYSQL_PORT={MYSQL_CONFIG['port']}")
        print(f"MYSQL_USER={MYSQL_CONFIG['user']}")
        print(f"MYSQL_PASSWORD={MYSQL_CONFIG['password']}")
        print(f"MYSQL_DATABASE={MYSQL_CONFIG['database']}")
        print(f"USE_MYSQL=true")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üóÑÔ∏è –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ MySQL")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤–∞—à Railway MySQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω")
    print()
    
    migrate_sqlite_to_mysql()
