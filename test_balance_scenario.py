#!/usr/bin/env python3

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TEST_MODE'] = 'True'
os.environ['WEBHOOK_SECRET'] = 'test_secret'
os.environ['DEFAULT_EXCHANGE'] = 'bybit'
os.environ['TEST_BALANCE_USDT'] = '100'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')


def test_balance_scenario():
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
    from exchange_selector import ExchangeSelector
    from bot.db import init_db, init_test_balances, update_balance
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    init_test_balances()
    
    # –°–æ–∑–¥–∞—ë–º —Å–µ–ª–µ–∫—Ç–æ—Ä
    selector = ExchangeSelector()
    
    print("\n1. –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
    bybit_balance = selector.bybit.get_balance("USDT")
    binance_balance = selector.binance.get_balance("USDT")
    print(f"Bybit –±–∞–ª–∞–Ω—Å: {bybit_balance} USDT")
    print(f"Binance –±–∞–ª–∞–Ω—Å: {binance_balance} USDT")
    
    print("\n2. –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ Bybit...")
    # –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –Ω–∞ Bybit
    update_balance("Bybit", "USDT", 50)
    bybit_balance = selector.bybit.get_balance("USDT")
    print(f"Bybit –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {bybit_balance} USDT")
    
    print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É –Ω–∞ 80 USDT (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞ Bybit, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞ Binance)...")
    try:
        exchange, price = selector.get_best_price_exchange("BTCUSDT", 80)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω–∞ –±–∏—Ä–∂–∞: {exchange.name}")
        print(f"–¶–µ–Ω–∞: {price}")
        
        if exchange.name == "Binance":
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–∞ Binance (–Ω–∞ Bybit –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤)")
        else:
            print("‚ùå –û—à–∏–±–∫–∞: –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–∞ Binance")
            
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É –Ω–∞ 30 USDT (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞ –æ–±–µ–∏—Ö –±–∏—Ä–∂–∞—Ö)...")
    try:
        exchange, price = selector.get_best_price_exchange("BTCUSDT", 30)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω–∞ –±–∏—Ä–∂–∞: {exchange.name}")
        print(f"–¶–µ–Ω–∞: {price}")
        
        if exchange.name == "Bybit":
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–∞ Bybit (–ª—É—á—à–∞—è —Ü–µ–Ω–∞)")
        else:
            print("‚ùå –û—à–∏–±–∫–∞: –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–∞ Bybit")
            
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É –Ω–∞ 120 USDT (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞ –æ–±–µ–∏—Ö –±–∏—Ä–∂–∞—Ö)...")
    try:
        exchange, price = selector.get_best_price_exchange("BTCUSDT", 120)
        print(f"‚ùå –û—à–∏–±–∫–∞: —Å–¥–µ–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
    except ValueError as e:
        print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ: {e}")
    
    print("\n6. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å—ã...")
    init_test_balances()
    bybit_balance = selector.bybit.get_balance("USDT")
    binance_balance = selector.binance.get_balance("USDT")
    print(f"Bybit –±–∞–ª–∞–Ω—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {bybit_balance} USDT")
    print(f"Binance –±–∞–ª–∞–Ω—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {binance_balance} USDT")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    test_balance_scenario()
