#!/usr/bin/env python3

import os
import sys
import asyncio

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TEST_MODE'] = 'True'
os.environ['WEBHOOK_SECRET'] = 'test_secret'
os.environ['DEFAULT_EXCHANGE'] = 'bybit'
os.environ['TEST_BALANCE_USDT'] = '1000'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')

async def test_telegram_balances():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /balances –≤ Telegram –±–æ—Ç–µ"""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /balances...")
    
    from bot.db import init_db, init_test_balances, get_all_balances
    from bot.telegram_bot import TelegramBot
    from unittest.mock import AsyncMock
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    init_test_balances()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –±–∞–ª–∞–Ω—Å—ã
    balances = get_all_balances()
    print(f"–ë–∞–ª–∞–Ω—Å—ã –≤ –ë–î: {balances}")
    
    # –°–æ–∑–¥–∞—ë–º Telegram –±–æ—Ç–∞
    bot = TelegramBot()
    
    # Mock –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    sent_messages = []
    
    async def mock_send(message):
        sent_messages.append(message)
        print(f"üì± –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {message}")
        
    bot.send_message = mock_send
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /balances
    try:
        await bot.handle_balances()
        
        if sent_messages:
            message = sent_messages[0]
            print(f"\n‚úÖ –ö–æ–º–∞–Ω–¥–∞ /balances —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç: {len(message)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –±–∞–ª–∞–Ω—Å–∞—Ö
            if "Bybit" in message or "Binance" in message:
                print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ –±–∏—Ä–∂–∞—Ö")
            else:
                print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –æ –±–∏—Ä–∂–∞—Ö")
                
            if "USDT" in message or "DOT" in message:
                print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ –º–æ–Ω–µ—Ç–∞—Ö")
            else:
                print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –æ –º–æ–Ω–µ—Ç–∞—Ö")
                
        else:
            print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_balances: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_telegram_balances())
