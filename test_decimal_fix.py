#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ Decimal vs float
"""

import os
import sys
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.append(os.path.join(os.path.dirname(__file__)))

from bot.config import *
from bot.db import init_db, update_balance, get_balance
from bot.utils import generate_request_id

def test_decimal_fix():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ Decimal vs float")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º get_balance —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–µ–π –≤ float
    print("\n1. –¢–µ—Å—Ç get_balance:")
    balance = get_balance("Binance", "USDT")
    print(f"   –ë–∞–ª–∞–Ω—Å: {balance} (—Ç–∏–ø: {type(balance)})")
    assert isinstance(balance, float), f"–û–∂–∏–¥–∞–ª—Å—è float, –ø–æ–ª—É—á–µ–Ω {type(balance)}"
    print("   ‚úÖ get_balance –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç float")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å request_id
    print("\n2. –¢–µ—Å—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ request_id:")
    id1 = generate_request_id("BTCUSDT", "buy")
    time.sleep(0.001)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
    id2 = generate_request_id("BTCUSDT", "buy")
    print(f"   ID1: {id1}")
    print(f"   ID2: {id2}")
    assert id1 != id2, "request_id –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏"
    print("   ‚úÖ request_id —É–Ω–∏–∫–∞–ª—å–Ω—ã")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    print("\n3. –¢–µ—Å—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:")
    price = 3.0987  # float
    last_buy_price = 3.0900  # float  
    qty = 3.220197  # float
    fee = 3.900026968040038e-09  # float (–æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–æ–µ —á–∏—Å–ª–æ)
    
    try:
        profit = (price - last_buy_price) * qty - fee
        print(f"   –ü—Ä–∏–±—ã–ª—å: {profit:.8f}")
        print("   ‚úÖ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except TypeError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    test_decimal_fix()
