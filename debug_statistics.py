#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.append(os.path.join(os.path.dirname(__file__)))

def debug_statistics():
    """–ê–Ω–∞–ª–∏–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–±—ã–ª–∏"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π")
    
    try:
        from bot.db import get_profit_statistics, get_trades_summary
        from bot.config import USE_MYSQL
        
        print(f"   –†–µ–∂–∏–º –ë–î: {'MySQL' if USE_MYSQL else 'SQLite'}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–¥–µ–ª–∫–∏
        summary = get_trades_summary()
        recent_trades = summary['recent_trades']
        total_trades = summary['total_trades']
        
        print(f"\nüìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫: {total_trades}")
        
        if recent_trades:
            print("\nüïí –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–¥–µ–ª–∫–∏:")
            for i, trade in enumerate(recent_trades):
                print(f"   {i+1}. {trade['timestamp'][:16]} | {trade['exchange']} {trade['side']} {trade['symbol']} | ${trade['amount_usdt']:.2f} | Profit: {trade.get('profit', 'N/A')}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏–±—ã–ª–∏
        stats = get_profit_statistics()
        
        print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–±—ã–ª–∏:")
        print(f"   üí∞ –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${stats['total_profit']:.4f}")
        print(f"   üìä –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å: ${stats['avg_profit']:.4f}")
        print(f"   üéØ –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {stats['win_rate']:.1f}%")
        print(f"   ‚úÖ –ü—Ä–∏–±—ã–ª—å–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: {stats['profitable_trades']}")
        print(f"   ‚ùå –£–±—ã—Ç–æ—á–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: {stats['losing_trades']}")
        print(f"   üìã –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫ —Å P&L: {stats['total_trades_with_profit']}")
        print(f"   üèÜ –õ—É—á—à–∞—è —Å–¥–µ–ª–∫–∞: ${stats['best_trade']:.4f}")
        print(f"   üìâ –•—É–¥—à–∞—è —Å–¥–µ–ª–∫–∞: ${stats['worst_trade']:.4f}")
        print(f"   üí∏ –û–±—â–∏–µ –∫–æ–º–∏—Å—Å–∏–∏: ${stats['total_fees']:.4f}")
        print(f"   üìä –û–±—ä—ë–º —Ç–æ—Ä–≥–æ–≤: ${stats['total_volume']:.2f}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è:")
        print(f"   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫: {total_trades}")
        print(f"   –°–¥–µ–ª–æ–∫ —Å –ø—Ä–∏–±—ã–ª—å—é: {stats['total_trades_with_profit']}")
        print(f"   –ü—Ä–∏–±—ã–ª—å–Ω—ã—Ö + —É–±—ã—Ç–æ—á–Ω—ã—Ö: {stats['profitable_trades'] + stats['losing_trades']}")
        
        if stats['total_trades_with_profit'] != stats['profitable_trades'] + stats['losing_trades']:
            print("   ‚ö†Ô∏è –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –≤ –ø–æ–¥—Å—á–µ—Ç–µ —Å–¥–µ–ª–æ–∫!")
        else:
            print("   ‚úÖ –ü–æ–¥—Å—á–µ—Ç —Å–¥–µ–ª–æ–∫ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
            
        # –ê–Ω–∞–ª–∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
        print(f"\nüßÆ –†—É—á–Ω–æ–π –ø–æ–¥—Å—á–µ—Ç:")
        
        if USE_MYSQL:
            import mysql.connector
            from bot.config import MYSQL_HOST, MYSQL_PORT, MYSQL_USER, MYSQL_PASSWORD, MYSQL_DATABASE
            
            conn = mysql.connector.connect(
                host=MYSQL_HOST,
                port=MYSQL_PORT,
                user=MYSQL_USER,
                password=MYSQL_PASSWORD,
                database=MYSQL_DATABASE
            )
        else:
            import sqlite3
            from bot.config import DB_PATH
            conn = sqlite3.connect(DB_PATH)
            
        cur = conn.cursor()
        
        # –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–¥–µ–ª–æ–∫ —Å profit
        cur.execute("SELECT side, profit, amount_usdt FROM trades WHERE profit IS NOT NULL ORDER BY timestamp")
        profit_trades = cur.fetchall()
        
        manual_total_profit = 0
        manual_profitable = 0
        manual_losing = 0
        
        print("   –°–¥–µ–ª–∫–∏ —Å –ø—Ä–∏–±—ã–ª—å—é:")
        for side, profit, amount in profit_trades:
            profit_val = float(profit) if profit is not None else 0.0
            manual_total_profit += profit_val
            
            if profit_val > 0:
                manual_profitable += 1
                status = "üíö"
            elif profit_val < 0:
                manual_losing += 1
                status = "‚ù§Ô∏è"
            else:
                status = "üíõ"
                
            print(f"     {status} {side} ${amount:.2f} -> profit: ${profit_val:.4f}")
        
        print(f"\n   üìä –†—É—á–Ω–æ–π –ø–æ–¥—Å—á–µ—Ç:")
        print(f"     –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${manual_total_profit:.4f}")
        print(f"     –ü—Ä–∏–±—ã–ª—å–Ω—ã—Ö: {manual_profitable}")
        print(f"     –£–±—ã—Ç–æ—á–Ω—ã—Ö: {manual_losing}")
        
        # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
        print(f"\n‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:")
        print(f"   –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: –ë–î ${stats['total_profit']:.4f} vs –†—É—á–Ω–æ–π ${manual_total_profit:.4f}")
        print(f"   –ü—Ä–∏–±—ã–ª—å–Ω—ã—Ö: –ë–î {stats['profitable_trades']} vs –†—É—á–Ω–æ–π {manual_profitable}")
        print(f"   –£–±—ã—Ç–æ—á–Ω—ã—Ö: –ë–î {stats['losing_trades']} vs –†—É—á–Ω–æ–π {manual_losing}")
        
        conn.close()
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    debug_statistics()
