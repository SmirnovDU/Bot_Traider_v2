#!/usr/bin/env python3

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TEST_MODE'] = 'True'
os.environ['WEBHOOK_SECRET'] = 'test_secret'
os.environ['DEFAULT_EXCHANGE'] = 'bybit'
os.environ['TEST_BALANCE_USDT'] = '100'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('bot')


def test_exchange_selector():
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –±–∏—Ä–∂–∏ –ø–æ —Ü–µ–Ω–µ –∏ –±–∞–ª–∞–Ω—Å–∞–º...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
    from exchange_selector import ExchangeSelector
    from bot.db import init_db, init_test_balances
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    init_test_balances()
    
    # –°–æ–∑–¥–∞—ë–º —Å–µ–ª–µ–∫—Ç–æ—Ä
    selector = ExchangeSelector()
    
    print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ª—É—á—à–µ–π —Ü–µ–Ω—ã —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏...")
    exchange, price = selector.get_best_price_exchange("BTCUSDT", 50)
    print(f"–í—ã–±—Ä–∞–Ω–∞ –±–∏—Ä–∂–∞: {exchange.name}")
    print(f"–¶–µ–Ω–∞: {price}")
    
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∏—Ä–∂–∏ –ø–æ –∏–º–µ–Ω–∏...")
    bybit = selector.get_exchange_by_name("bybit")
    binance = selector.get_exchange_by_name("binance")
    print(f"Bybit: {bybit.name}")
    print(f"Binance: {binance.name}")
    
    print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—ã –Ω–∞ –æ–±–µ–∏—Ö –±–∏—Ä–∂–∞—Ö...")
    bybit_price = bybit.get_last_price("BTCUSDT")
    binance_price = binance.get_last_price("BTCUSDT")
    print(f"Bybit —Ü–µ–Ω–∞ BTC: {bybit_price}")
    print(f"Binance —Ü–µ–Ω–∞ BTC: {binance_price}")
    
    print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å—ã –Ω–∞ –æ–±–µ–∏—Ö –±–∏—Ä–∂–∞—Ö...")
    bybit_balance = bybit.get_balance("USDT")
    binance_balance = binance.get_balance("USDT")
    print(f"Bybit –±–∞–ª–∞–Ω—Å USDT: {bybit_balance}")
    print(f"Binance –±–∞–ª–∞–Ω—Å USDT: {binance_balance}")
    
    print("\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –±–∏—Ä–∂–∏ —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏...")
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∫—É–ø–∏—Ç—å –Ω–∞ —Å—É–º–º—É –±–æ–ª—å—à–µ –±–∞–ª–∞–Ω—Å–∞
        exchange, price = selector.get_best_price_exchange("BTCUSDT", 200)
        print(f"‚ùå –û—à–∏–±–∫–∞: —Å–¥–µ–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
    except ValueError as e:
        print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ: {e}")
    
    print("\n6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –±–∏—Ä–∂–∏ —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏...")
    try:
        # –ü–æ–∫—É–ø–∞–µ–º –Ω–∞ —Å—É–º–º—É –º–µ–Ω—å—à–µ –±–∞–ª–∞–Ω—Å–∞
        exchange, price = selector.get_best_price_exchange("BTCUSDT", 10)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω–∞ –±–∏—Ä–∂–∞: {exchange.name}")
        print(f"–¶–µ–Ω–∞: {price}")
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    if bybit_price <= binance_price:
        print("\n‚úÖ Bybit –∏–º–µ–µ—Ç –ª—É—á—à—É—é —Ü–µ–Ω—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏")
    else:
        print("\n‚úÖ Binance –∏–º–µ–µ—Ç –ª—É—á—à—É—é —Ü–µ–Ω—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –±–∏—Ä–∂–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    test_exchange_selector()
